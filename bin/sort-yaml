#!/usr/bin/env ruby
# frozen_string_literal: true

require "dorian/arguments"
require "yaml"

def sort_yaml(data)
  if data.is_a?(Array)
    data.map { |element| sort_yaml(element) }
  elsif data.is_a?(Hash)
    data
      .sort_by { |key, _value| key }
      .to_h
      .transform_values { |value| sort_yaml(value) }
  else
    data
  end
end

parsed = Dorian::Arguments.parse(version: { alias: :v }, help: { alias: :h })

abort parsed.help if parsed.options.help

if parsed.options.version
  abort File.read(File.expand_path("../../VERSION", __FILE__))
end

inputs = parsed.arguments + parsed.files.map { |file| File.read(file) }
inputs = [$stdin.each_line.to_a.map(&:strip).join("\n")] if inputs.empty?

inputs.each { |input| puts sort_yaml(YAML.safe_load(input)).to_yaml }
